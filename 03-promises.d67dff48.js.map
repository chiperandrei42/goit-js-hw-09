{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAaC,SAASC,cAAc,kBACpCC,EAAiBF,SAASC,cAAc,iBACxCE,EAAgBH,SAASC,cAAc,mBAG7C,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,qBAAqBH,QAAeC,OAE5CG,EAAO,oBAAoBJ,QAAeC,MAAU,GAErDA,EAAM,G,CAXON,SAASC,cAAc,mBAiB/Ba,iBAAiB,SAAUC,IACrCA,EAAEC,iBACF,MAAMC,EAAaC,OAAOf,EAAcgB,OACxC,IAAIb,EAAQY,OAAOnB,EAAWoB,OAC9B,MAAMC,EAAiBF,OAAOhB,EAAeiB,OAE7C,IAAK,IAAIE,EAAI,EAAGA,EAAIJ,EAAYI,IAC9BjB,EAAca,EAAYX,GAAOgB,MAAKC,GAAW1B,EAAA2B,OAAOC,QAAQF,KAAUG,OAAMC,GAAS9B,EAAA2B,OAAOI,QAAQD,KACxGrB,GAASc,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix\";\nconst firstDelay = document.querySelector(\"[name='delay']\");\nconst delayIncrement = document.querySelector(\"[name='step']\");\nconst promiseAmount = document.querySelector(\"[name='amount']\");\nconst startButton = document.querySelector(\"[type='submit']\");\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n    \n  });\n}\n\n\nstartButton.addEventListener('click', (e) => {\n  e.preventDefault();\n  const userAmount = Number(promiseAmount.value);\n  let delay = Number(firstDelay.value);\n  const incrementDelay = Number(delayIncrement.value);\n\n  for (let i = 0; i < userAmount; i++) {\n    createPromise(userAmount, delay).then(message => Notify.success(message)).catch(error => Notify.failure(error));\n    delay += incrementDelay;\n  }\n})\n\n\n\n\n"],"names":["$1GAPJ","parcelRequire","$47d4ff9957288465$var$firstDelay","document","querySelector","$47d4ff9957288465$var$delayIncrement","$47d4ff9957288465$var$promiseAmount","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","userAmount","Number","value","incrementDelay","i","then","message","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.d67dff48.js.map"}